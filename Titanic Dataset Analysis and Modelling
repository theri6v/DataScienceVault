{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/rishavwalde/titanic-dataset-analysis-and-modelling?scriptVersionId=196040421\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"5018ab9b","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-09-10T08:52:45.110011Z","iopub.status.busy":"2024-09-10T08:52:45.109451Z","iopub.status.idle":"2024-09-10T08:52:47.787793Z","shell.execute_reply":"2024-09-10T08:52:47.78661Z"},"papermill":{"duration":2.68636,"end_time":"2024-09-10T08:52:47.790452","exception":false,"start_time":"2024-09-10T08:52:45.104092","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/titanic-cleaned-data/train_clean.csv\n","/kaggle/input/titanic-cleaned-data/test_clean.csv\n","/kaggle/input/titanic/train.csv\n","/kaggle/input/titanic/test.csv\n","/kaggle/input/titanic/gender_submission.csv\n"]}],"source":["\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","from sklearn.ensemble import RandomForestClassifier\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n"]},{"cell_type":"markdown","id":"9cbb4f10","metadata":{"papermill":{"duration":0.002562,"end_time":"2024-09-10T08:52:47.796175","exception":false,"start_time":"2024-09-10T08:52:47.793613","status":"completed"},"tags":[]},"source":["# Load Data"]},{"cell_type":"code","execution_count":2,"id":"32d5fc67","metadata":{"execution":{"iopub.execute_input":"2024-09-10T08:52:47.804022Z","iopub.status.busy":"2024-09-10T08:52:47.803387Z","iopub.status.idle":"2024-09-10T08:52:47.851056Z","shell.execute_reply":"2024-09-10T08:52:47.849833Z"},"papermill":{"duration":0.054738,"end_time":"2024-09-10T08:52:47.853771","exception":false,"start_time":"2024-09-10T08:52:47.799033","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Fare</th>\n","      <th>Name</th>\n","      <th>Parch</th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>SibSp</th>\n","      <th>Survived</th>\n","      <th>Ticket</th>\n","      <th>Title</th>\n","      <th>Family_Size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22.0</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>7.2500</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>A/5 21171</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38.0</td>\n","      <td>C85</td>\n","      <td>C</td>\n","      <td>71.2833</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>PC 17599</td>\n","      <td>Mrs</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>26.0</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>7.9250</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>Miss</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>35.0</td>\n","      <td>C123</td>\n","      <td>S</td>\n","      <td>53.1000</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>113803</td>\n","      <td>Mrs</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>8.0500</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>373450</td>\n","      <td>Mr</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Age Cabin Embarked     Fare  \\\n","0  22.0   NaN        S   7.2500   \n","1  38.0   C85        C  71.2833   \n","2  26.0   NaN        S   7.9250   \n","3  35.0  C123        S  53.1000   \n","4  35.0   NaN        S   8.0500   \n","\n","                                                Name  Parch  PassengerId  \\\n","0                            Braund, Mr. Owen Harris      0            1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n","2                             Heikkinen, Miss. Laina      0            3   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n","4                           Allen, Mr. William Henry      0            5   \n","\n","   Pclass     Sex  SibSp  Survived            Ticket Title  Family_Size  \n","0       3    male      1       0.0         A/5 21171    Mr            1  \n","1       1  female      1       1.0          PC 17599   Mrs            1  \n","2       3  female      0       1.0  STON/O2. 3101282  Miss            0  \n","3       1  female      1       1.0            113803   Mrs            1  \n","4       3    male      0       0.0            373450    Mr            0  "]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["# Load the training data from the specified CSV file\n","train_data = pd.read_csv(\"/kaggle/input/titanic-cleaned-data/train_clean.csv\")\n","\n","# Display the first few rows of the training data\n","train_data.head()"]},{"cell_type":"code","execution_count":3,"id":"3531e612","metadata":{"execution":{"iopub.execute_input":"2024-09-10T08:52:47.862078Z","iopub.status.busy":"2024-09-10T08:52:47.861629Z","iopub.status.idle":"2024-09-10T08:52:47.888941Z","shell.execute_reply":"2024-09-10T08:52:47.887466Z"},"papermill":{"duration":0.034421,"end_time":"2024-09-10T08:52:47.891555","exception":false,"start_time":"2024-09-10T08:52:47.857134","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass                                          Name     Sex  \\\n","0          892       3                              Kelly, Mr. James    male   \n","1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n","2          894       2                     Myles, Mr. Thomas Francis    male   \n","3          895       3                              Wirz, Mr. Albert    male   \n","4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n","\n","    Age  SibSp  Parch   Ticket     Fare Cabin Embarked  \n","0  34.5      0      0   330911   7.8292   NaN        Q  \n","1  47.0      1      0   363272   7.0000   NaN        S  \n","2  62.0      0      0   240276   9.6875   NaN        Q  \n","3  27.0      0      0   315154   8.6625   NaN        S  \n","4  22.0      1      1  3101298  12.2875   NaN        S  "]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# Load the test data from the specified CSV file\n","test_data = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\n","\n","# Display the first few rows of the test data\n","test_data.head()"]},{"cell_type":"code","execution_count":4,"id":"dfb60ad0","metadata":{"execution":{"iopub.execute_input":"2024-09-10T08:52:47.900203Z","iopub.status.busy":"2024-09-10T08:52:47.899786Z","iopub.status.idle":"2024-09-10T08:52:47.913131Z","shell.execute_reply":"2024-09-10T08:52:47.91171Z"},"papermill":{"duration":0.020529,"end_time":"2024-09-10T08:52:47.915671","exception":false,"start_time":"2024-09-10T08:52:47.895142","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["% of women who survived: 0.7420382165605095\n"]}],"source":["# Filter the training data to include only rows where 'Sex' is 'female'\n","women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\n","\n","# Calculate the survival rate for women\n","rate_women = sum(women) / len(women)\n","\n","# Print the percentage of women who survived\n","print(\"% of women who survived:\", rate_women)"]},{"cell_type":"code","execution_count":5,"id":"f4f3f41e","metadata":{"execution":{"iopub.execute_input":"2024-09-10T08:52:47.92536Z","iopub.status.busy":"2024-09-10T08:52:47.924944Z","iopub.status.idle":"2024-09-10T08:52:47.934193Z","shell.execute_reply":"2024-09-10T08:52:47.932837Z"},"papermill":{"duration":0.017392,"end_time":"2024-09-10T08:52:47.936595","exception":false,"start_time":"2024-09-10T08:52:47.919203","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["% of men who survived: 0.18890814558058924\n"]}],"source":["# Filter the training data to include only rows where 'Sex' is 'male'\n","men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\n","\n","# Calculate the survival rate for men\n","rate_men = sum(men) / len(men)\n","\n","# Print the percentage of men who survived\n","print(\"% of men who survived:\", rate_men)"]},{"cell_type":"code","execution_count":6,"id":"937a268c","metadata":{"execution":{"iopub.execute_input":"2024-09-10T08:52:47.945617Z","iopub.status.busy":"2024-09-10T08:52:47.945179Z","iopub.status.idle":"2024-09-10T08:52:48.187702Z","shell.execute_reply":"2024-09-10T08:52:48.186156Z"},"papermill":{"duration":0.250298,"end_time":"2024-09-10T08:52:48.190545","exception":false,"start_time":"2024-09-10T08:52:47.940247","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Your submission was successfully saved!\n"]}],"source":["from sklearn.ensemble import RandomForestClassifier\n","import pandas as pd\n","\n","# Define the target variable\n","y = train_data[\"Survived\"]\n","\n","# Specify the features to be used for prediction\n","features = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\n","\n","# Convert categorical features into dummy/indicator variables for both train and test data\n","X = pd.get_dummies(train_data[features])\n","X_test = pd.get_dummies(test_data[features])\n","\n","# Initialize and configure the RandomForestClassifier\n","model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\n","\n","# Train the model using the training data\n","model.fit(X, y)\n","\n","# Make predictions on the test data\n","predictions = model.predict(X_test)\n","\n","# Prepare the submission file with PassengerId and corresponding predictions\n","output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\n","\n","# Save the predictions to a CSV file\n","output.to_csv('submission.csv', index=False)\n","\n","# Print a confirmation message\n","print(\"Your submission was successfully saved!\")"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":26502,"sourceId":3136,"sourceType":"competition"},{"datasetId":80599,"sourceId":187274,"sourceType":"datasetVersion"}],"dockerImageVersionId":30761,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.14"},"papermill":{"default_parameters":{},"duration":6.904896,"end_time":"2024-09-10T08:52:48.918082","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-09-10T08:52:42.013186","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}